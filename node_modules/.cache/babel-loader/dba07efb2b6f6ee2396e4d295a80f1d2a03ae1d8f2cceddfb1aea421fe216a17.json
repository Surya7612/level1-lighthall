{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Lighthall/clickcounter-lighthall/clickcounter/src/clickcounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./clickcounter.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"video\", {\n  autoPlay: true,\n  muted: true,\n  loop: true,\n  id: \"space-background\",\n  children: /*#__PURE__*/_jsxDEV(\"source\", {\n    src: \"/space-background.mp4\",\n    type: \"video/mp4\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 1\n}, this);\nfunction ClickCounter() {\n  _s();\n  const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\")) || 0);\n  function handleClicks() {\n    setCount(count + 1);\n  }\n  // useEffect to store the count state in localstorage\n  useEffect(() => {\n    localStorage.setItem(\"count\", count);\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"click-counter\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClicks,\n      children: \"Click Here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Total Clicks: \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(ClickCounter, \"807W8+ZbLyH+teKiLA8fe7hhtnE=\");\n_c = ClickCounter;\nexport default ClickCounter;\nvar _c;\n$RefreshReg$(_c, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","autoPlay","muted","loop","id","children","src","type","fileName","_jsxFileName","lineNumber","columnNumber","ClickCounter","_s","count","setCount","parseInt","localStorage","getItem","handleClicks","setItem","className","onClick","_c","$RefreshReg$"],"sources":["/Users/surya/Desktop/Lighthall/clickcounter-lighthall/clickcounter/src/clickcounter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./clickcounter.css\";\n\n<video autoPlay muted loop id=\"space-background\">\n  <source src=\"/space-background.mp4\" type=\"video/mp4\" />\n</video>\n\nfunction ClickCounter() {\n    const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\"))|| 0 );\n\n    function handleClicks(){\n        setCount(count + 1);\n    }\n// useEffect to store the count state in localstorage\n    useEffect(() => {\n        localStorage.setItem(\"count\",count);\n    },[count]);\n\nreturn(\n    <div className=\"click-counter\">\n        <button onClick={handleClicks}>\n            Click Here!\n        </button>\n        <p>Total Clicks: {count} </p>\n    </div>\n);\n}\n\nexport default ClickCounter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,aAAAA,OAAA;EAAOC,QAAQ;EAACC,KAAK;EAACC,IAAI;EAACC,EAAE,EAAC,kBAAkB;EAAAC,QAAA,eAC9CL,OAAA;IAAQM,GAAG,EAAC,uBAAuB;IAACC,IAAI,EAAC;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA;AAAG;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,QACjD;AAER,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAACmB,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAG,CAAC,CAAE;EAEhF,SAASC,YAAYA,CAAA,EAAE;IACnBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB;EACJ;EACIhB,SAAS,CAAC,MAAM;IACZmB,YAAY,CAACG,OAAO,CAAC,OAAO,EAACN,KAAK,CAAC;EACvC,CAAC,EAAC,CAACA,KAAK,CAAC,CAAC;EAEd,oBACId,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAhB,QAAA,gBAC1BL,OAAA;MAAQsB,OAAO,EAAEH,YAAa;MAAAd,QAAA,EAAC;IAE/B;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eACTX,OAAA;MAAAK,QAAA,GAAG,gBAAc,EAACS,KAAK,EAAC,GAAC;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3B;AAEV;AAACE,EAAA,CAnBQD,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAqBrB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}