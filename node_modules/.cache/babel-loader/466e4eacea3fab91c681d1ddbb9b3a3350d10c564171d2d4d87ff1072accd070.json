{"ast":null,"code":"var _jsxFileName = \"/Users/surya/Desktop/Lighthall/clickcounter-lighthall/clickcounter/src/clickcounter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./clickcounter.css\";\n\n// function ClickCounter() {\n//     const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\"))|| 0 );\n\n//     function handleClicks(){\n//         setCount(count + 1);\n//     }\n// // useEffect to store the count state in localstorage\n//     useEffect(() => {\n//         localStorage.setItem(\"count\",count);\n//     },[count]);\n\n// return(\n//     <div className=\"click-counter\">\n//         <button onClick={handleClicks}>\n//             Click Here!\n//         </button>\n//         <p>Total Clicks: {count} </p>\n//     </div>\n// );\n// }\n\n// export default ClickCounter;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ClickCounter() {\n  _s();\n  const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\")) || 0);\n  useEffect(() => {\n    const spaceBackground = document.getElementById(\"space-background\");\n    spaceBackground.currentTime = Math.floor(Math.random() * spaceBackground.duration);\n    spaceBackground.addEventListener(\"ended\", function () {\n      this.currentTime = 0;\n      this.play();\n    });\n  }, []);\n  useEffect(() => {\n    const spaceBackground = document.getElementById(\"space-background\");\n    spaceBackground.addEventListener(\"loadedmetadata\", () => {\n      spaceBackground.currentTime = Math.floor(Math.random() * spaceBackground.duration);\n    });\n    spaceBackground.addEventListener(\"ended\", function () {\n      this.currentTime = 0;\n      this.play();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"click-counter-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      autoPlay: true,\n      muted: true,\n      loop: true,\n      id: \"space-background\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"/space-bg.mp4\",\n        type: \"video/mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"click-counter-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Clickathon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Clicks: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClick,\n        children: \"Click me!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_s(ClickCounter, \"IIjqlndoNSh3gix/adgZQdCplQQ=\");\n_c = ClickCounter;\nexport default ClickCounter;\nvar _c;\n$RefreshReg$(_c, \"ClickCounter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ClickCounter","_s","count","setCount","parseInt","localStorage","getItem","spaceBackground","document","getElementById","currentTime","Math","floor","random","duration","addEventListener","play","className","children","autoPlay","muted","loop","id","src","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleButtonClick","_c","$RefreshReg$"],"sources":["/Users/surya/Desktop/Lighthall/clickcounter-lighthall/clickcounter/src/clickcounter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./clickcounter.css\";\n\n// function ClickCounter() {\n//     const [count, setCount] = useState(parseInt(localStorage.getItem(\"count\"))|| 0 );\n\n//     function handleClicks(){\n//         setCount(count + 1);\n//     }\n// // useEffect to store the count state in localstorage\n//     useEffect(() => {\n//         localStorage.setItem(\"count\",count);\n//     },[count]);\n\n// return(\n//     <div className=\"click-counter\">\n//         <button onClick={handleClicks}>\n//             Click Here!\n//         </button>\n//         <p>Total Clicks: {count} </p>\n//     </div>\n// );\n// }\n\n// export default ClickCounter;\n\nfunction ClickCounter() {\n    const [count, setCount] = useState(\n      parseInt(localStorage.getItem(\"count\")) || 0\n    );\n  \n    useEffect(() => {\n      const spaceBackground = document.getElementById(\"space-background\");\n      spaceBackground.currentTime = Math.floor(\n        Math.random() * spaceBackground.duration\n      );\n      spaceBackground.addEventListener(\"ended\", function () {\n        this.currentTime = 0;\n        this.play();\n      });\n    }, []);\n  \n    useEffect(() => {\n        const spaceBackground = document.getElementById(\"space-background\");\n        spaceBackground.addEventListener(\"loadedmetadata\", () => {\n          spaceBackground.currentTime = Math.floor(\n            Math.random() * spaceBackground.duration\n          );\n        });\n        spaceBackground.addEventListener(\"ended\", function () {\n          this.currentTime = 0;\n          this.play();\n        });\n      }, []);\n  \n    return (\n      <div className=\"click-counter-container\">\n        <video autoPlay muted loop id=\"space-background\">\n          <source src=\"/space-bg.mp4\" type=\"video/mp4\" />\n        </video>\n        <div className=\"click-counter-content\">\n          <h1>Clickathon</h1>\n          <p>Total Clicks: {count}</p>\n          <button onClick={handleButtonClick}>Click me!</button>\n        </div>\n      </div>\n    );\n  }\n  \n  export default ClickCounter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAO,oBAAoB;;AAE3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAChCQ,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAC7C;EAEDT,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IACnEF,eAAe,CAACG,WAAW,GAAGC,IAAI,CAACC,KAAK,CACtCD,IAAI,CAACE,MAAM,EAAE,GAAGN,eAAe,CAACO,QAAQ,CACzC;IACDP,eAAe,CAACQ,gBAAgB,CAAC,OAAO,EAAE,YAAY;MACpD,IAAI,CAACL,WAAW,GAAG,CAAC;MACpB,IAAI,CAACM,IAAI,EAAE;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACZ,MAAMU,eAAe,GAAGC,QAAQ,CAACC,cAAc,CAAC,kBAAkB,CAAC;IACnEF,eAAe,CAACQ,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;MACvDR,eAAe,CAACG,WAAW,GAAGC,IAAI,CAACC,KAAK,CACtCD,IAAI,CAACE,MAAM,EAAE,GAAGN,eAAe,CAACO,QAAQ,CACzC;IACH,CAAC,CAAC;IACFP,eAAe,CAACQ,gBAAgB,CAAC,OAAO,EAAE,YAAY;MACpD,IAAI,CAACL,WAAW,GAAG,CAAC;MACpB,IAAI,CAACM,IAAI,EAAE;IACb,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAER,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCnB,OAAA;MAAOoB,QAAQ;MAACC,KAAK;MAACC,IAAI;MAACC,EAAE,EAAC,kBAAkB;MAAAJ,QAAA,eAC9CnB,OAAA;QAAQwB,GAAG,EAAC,eAAe;QAACC,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzC,eACR7B,OAAA;MAAKkB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCnB,OAAA;QAAAmB,QAAA,EAAI;MAAU;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnB7B,OAAA;QAAAmB,QAAA,GAAG,gBAAc,EAAChB,KAAK;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC5B7B,OAAA;QAAQ8B,OAAO,EAAEC,iBAAkB;QAAAZ,QAAA,EAAC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC3B,EAAA,CAzCMD,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AA2CnB,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}